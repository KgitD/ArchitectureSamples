plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

def cfg = rootProject.ext.configuration

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        buildConfigField "String", "BASE_URL_GITHUB", "\"https://api.github.com/\""
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion kotlin_compiler_version
    }

    sourceSets {
        main {
            res {
                srcDirs 'src\\main\\res', 'src\\main\\res\\layout'
            }
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    api 'androidx.core:core-ktx:1.3.2'
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'com.google.android.material:material:1.2.1'
    api "androidx.compose.ui:ui:$compose_version"
    api "androidx.compose.material:material:$compose_version"
    api "androidx.compose.ui:ui-tooling:$compose_version"
    api "androidx.compose.runtime:runtime:$compose_version"
    api "androidx.compose.runtime:runtime-livedata:$compose_version"
    api 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.0'
    api 'androidx.activity:activity-compose:1.3.0-alpha04'
    api "androidx.navigation:navigation-compose:1.0.0-alpha08"
    api 'androidx.constraintlayout:constraintlayout-compose:1.0.0-alpha03'

    // ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // Jetpack Compose Integration for ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha03"
    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - helpers for implementing LifecycleOwner in a Service
    api "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    api "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    api "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    api "androidx.fragment:fragment-ktx:1.3.2"

    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"
    api "com.squareup.retrofit2:converter-scalars:$retrofit_version"

    api "androidx.paging:paging-runtime:$paging_version"
    // alternatively - without Android dependencies for tests
    api "androidx.paging:paging-common-ktx:$paging_version"
    // Jetpack Compose Integration
    api "androidx.paging:paging-compose:1.0.0-alpha08"

    api "com.alibaba:arouter-api:$arouter_version"
    annotationProcessor "com.alibaba:arouter-compiler:$arouter_version"
    kapt "com.alibaba:arouter-compiler:$arouter_version"

    api 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    api "dev.chrisbanes.accompanist:accompanist-coil:$accompanist_version"
    api "dev.chrisbanes.accompanist:accompanist-insets:$accompanist_version"
    api "dev.chrisbanes.accompanist:accompanist-glide:$accompanist_version"

    api 'com.orhanobut:logger:2.2.0'
    api 'me.jessyan:autosize:1.2.1'
    api 'com.qmuiteam:qmui:2.0.0-alpha11'

    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    api 'com.yqritc:recyclerview-flexibledivider:1.4.0'
}